{"ast":null,"code":"var _jsxFileName = \"/home/w/d/shader-prototype/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { WaveMaterial } from './WaveMaterial';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShaderPlane() {\n  _s();\n  const ref = useRef();\n  const {\n    width,\n    height\n  } = useThree(state => state.viewport);\n  useFrame((state, delta) => ref.current.time += delta);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    scale: [width, height, 1],\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"waveMaterial\", {\n      ref: ref,\n      toneMapped: true,\n      colorStart: '#505050',\n      colorEnd: 'black'\n    }, WaveMaterial.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(ShaderPlane, \"20aR5YOEJxwwrDXmr8POYnwurQ8=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = ShaderPlane;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: /*#__PURE__*/_jsxDEV(ShaderPlane, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShaderPlane\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useRef","Canvas","useFrame","useThree","WaveMaterial","ShaderPlane","ref","width","height","state","viewport","delta","current","time","key","App"],"sources":["/home/w/d/shader-prototype/src/App.jsx"],"sourcesContent":["import { useRef } from 'react'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { WaveMaterial } from './WaveMaterial'\n\nfunction ShaderPlane() {\n  const ref = useRef()\n  const { width, height } = useThree((state) => state.viewport)\n  useFrame((state, delta) => (ref.current.time += delta))\n  return (\n    <mesh scale={[width, height, 1]}>\n      <planeGeometry />\n      <waveMaterial ref={ref} key={WaveMaterial.key} toneMapped={true} colorStart={'#505050'} colorEnd={'black'} />\n    </mesh>\n  )\n}\n\nexport default function App() {\n  return (\n    <Canvas>\n      <ShaderPlane />\n    </Canvas>\n  )\n}\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AAC/D,SAASC,YAAY,QAAQ,gBAAgB;AAAA;AAE7C,SAASC,WAAW,GAAG;EAAA;EACrB,MAAMC,GAAG,GAAGN,MAAM,EAAE;EACpB,MAAM;IAAEO,KAAK;IAAEC;EAAO,CAAC,GAAGL,QAAQ,CAAEM,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAC7DR,QAAQ,CAAC,CAACO,KAAK,EAAEE,KAAK,KAAML,GAAG,CAACM,OAAO,CAACC,IAAI,IAAIF,KAAM,CAAC;EACvD,oBACE;IAAM,KAAK,EAAE,CAACJ,KAAK,EAAEC,MAAM,EAAE,CAAC,CAAE;IAAA,wBAC9B;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAc,GAAG,EAAEF,GAAI;MAAwB,UAAU,EAAE,IAAK;MAAC,UAAU,EAAE,SAAU;MAAC,QAAQ,EAAE;IAAQ,GAA7EF,YAAY,CAACU,GAAG;MAAA;MAAA;MAAA;IAAA,QAAgE;EAAA;IAAA;IAAA;IAAA;EAAA,QACxG;AAEX;AAAC,GAVQT,WAAW;EAAA,QAEQF,QAAQ,EAClCD,QAAQ;AAAA;AAAA,KAHDG,WAAW;AAYpB,eAAe,SAASU,GAAG,GAAG;EAC5B,oBACE,QAAC,MAAM;IAAA,uBACL,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACR;AAEb;AAAC,MANuBA,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}